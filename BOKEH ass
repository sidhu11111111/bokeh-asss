{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "edba2d6a",
   "metadata": {},
   "source": [
    "#QNO.1 ANS"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f53939e9",
   "metadata": {},
   "source": [
    "Bokeh is a Python library for creating interactive visualizations in modern web browers. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1926f5a3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: bokeh in c:\\users\\kunda\\anaconda3\\lib\\site-packages (2.4.3)\n",
      "Requirement already satisfied: pillow>=7.1.0 in c:\\users\\kunda\\anaconda3\\lib\\site-packages (from bokeh) (9.2.0)\n",
      "Requirement already satisfied: packaging>=16.8 in c:\\users\\kunda\\anaconda3\\lib\\site-packages (from bokeh) (21.3)\n",
      "Requirement already satisfied: typing-extensions>=3.10.0 in c:\\users\\kunda\\anaconda3\\lib\\site-packages (from bokeh) (4.3.0)\n",
      "Requirement already satisfied: numpy>=1.11.3 in c:\\users\\kunda\\anaconda3\\lib\\site-packages (from bokeh) (1.21.5)\n",
      "Requirement already satisfied: tornado>=5.1 in c:\\users\\kunda\\anaconda3\\lib\\site-packages (from bokeh) (6.1)\n",
      "Requirement already satisfied: PyYAML>=3.10 in c:\\users\\kunda\\anaconda3\\lib\\site-packages (from bokeh) (6.0)\n",
      "Requirement already satisfied: Jinja2>=2.9 in c:\\users\\kunda\\anaconda3\\lib\\site-packages (from bokeh) (2.11.3)\n",
      "Requirement already satisfied: MarkupSafe>=0.23 in c:\\users\\kunda\\anaconda3\\lib\\site-packages (from Jinja2>=2.9->bokeh) (2.0.1)\n",
      "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in c:\\users\\kunda\\anaconda3\\lib\\site-packages (from packaging>=16.8->bokeh) (3.0.9)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install bokeh"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "93a9fd4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "from bokeh.plotting import figure , output_file , show\n",
    "x = [1,2,3,4,5]\n",
    "y = [6,7,8,9,3]\n",
    "output_file('line.html')\n",
    "p = figure(title='line plot', x_axis_label='x',y_axis_label='y')\n",
    "p.line(x, y, legend_label='Line',line_width = 2)\n",
    "show(p)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2faabca",
   "metadata": {},
   "source": [
    "#QNO.2 ANS\n",
    "In Bokeh glyphs are basic visual building blocks that represent individual data points in a plot. examples of glyphs include circles, squares , lines , and text. \n",
    "you can add glyphs to a bokeh plot to represent your data visually."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "91880481",
   "metadata": {},
   "outputs": [],
   "source": [
    "from bokeh.plotting import figure , output_file, show\n",
    "x= [1,2,3,4,5]\n",
    "y =[2,3,4,3,5]\n",
    "output_file('glyphs.html')\n",
    "p = figure(title='Glyphs graph', x_axis_label ='x',y_axis_label = 'y')\n",
    "p.circle(x,y, size=10,color='blue')\n",
    "p.square(x,y, size =12,alpha=0.5,color ='firebrick')\n",
    "show(p)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3102db6",
   "metadata": {},
   "source": [
    "#QNO.3 ANS\n",
    "1.Customizing th axes:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "238c23e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "from bokeh.plotting import figure, show\n",
    "from bokeh.models import DatetimeTickFormatter\n",
    "import datetime\n",
    "\n",
    "# create some sample data\n",
    "x = [datetime.date(2021, 1, 1), datetime.date(2021, 2, 1), datetime.date(2021, 3, 1)]\n",
    "y = [10, 20, 30]\n",
    "\n",
    "# create a new plot with custom axes\n",
    "p = figure(title=\"Custom axes\", x_axis_label='x', y_axis_label='y',\n",
    "           x_axis_type='datetime', y_axis_type='linear',\n",
    "           x_range=(datetime.date(2021, 1, 1), datetime.date(2021, 12, 31)),\n",
    "           y_range=(0, 40))\n",
    "\n",
    "# set the tick labels\n",
    "p.xaxis.formatter = DatetimeTickFormatter(months='%b %Y')\n",
    "\n",
    "# add a line renderer\n",
    "p.line(x, y, line_width=2)\n",
    "\n",
    "# show the results\n",
    "show(p)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d67fd366",
   "metadata": {},
   "source": [
    "2.Customizing the title:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d0bbca54",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1000 (MISSING_RENDERERS): Plot has no renderers: Figure(id='1736', ...)\n"
     ]
    }
   ],
   "source": [
    "# create a new plot with custom title\n",
    "p = figure(title=\"Custom title\", x_axis_label='x', y_axis_label='y')\n",
    "\n",
    "# customize the title text and font\n",
    "p.title.text = \"My custom title\"\n",
    "p.title.text_font = \"Arial\"\n",
    "\n",
    "# show the results\n",
    "show(p)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd8cbb05",
   "metadata": {},
   "source": [
    "3.Customizing the legend"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5be871a3",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\kunda\\anaconda3\\lib\\site-packages\\bokeh\\models\\plots.py:815: UserWarning: \n",
      "You are attempting to set `plot.legend.title` on a plot that has zero legends added, this will have no effect.\n",
      "\n",
      "Before legend properties can be set, you must add a Legend explicitly, or call a glyph method with a legend parameter set.\n",
      "\n",
      "  warnings.warn(_LEGEND_EMPTY_WARNING % attr)\n"
     ]
    }
   ],
   "source": [
    "from bokeh.plotting import figure, show\n",
    "\n",
    "# create some sample data\n",
    "x1 = [1, 2, 3, 4, 5]\n",
    "y1 = [5, 4, 3, 2, 1]\n",
    "x2 = [1, 2, 3, 4, 5]\n",
    "y2 = [1, 2, 3, 4, 5]\n",
    "\n",
    "# create a new plot with a legend\n",
    "p = figure(title=\"Multiple Lines with Legend\", x_axis_label='x', y_axis_label='y')\n",
    "p.legend.title = \"Legend Title\"\n",
    "\n",
    "# add multiple line renderers with different legend labels\n",
    "p.line(x1, y1, legend_label=\"Line 1\", line_width=2)\n",
    "p.line(x2, y2, legend_label=\"Line 2\", line_width=2)\n",
    "\n",
    "# show the results\n",
    "show(p)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6ad18cc",
   "metadata": {},
   "source": [
    "#QNO.4 ANS\n",
    "Bokeh is a Python library that allows users to create interactive plots and visualizations. The Bokeh server is a feature of Bokeh that allows for real-time, two-way communication between a web browser and a Python process running on a server. This enables the creation of dynamic and interactive data-driven web applications.\n",
    "\n",
    "To create an interactive plot with Bokeh server, you first need to define the plot using the Bokeh library. Once the plot is defined, you can create a Bokeh server application by defining a function that updates the plot based on user input. This function is then passed to the Bokeh server as a callback. When the user interacts with the plot, the Bokeh server executes the callback function, which updates the plot in real-time."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4fa93bba",
   "metadata": {},
   "source": [
    "#QNO.5 ANS\n",
    "To embed a Bokeh plot into a web page or dashboard using Flask or Django, you first need to create the Bokeh server application and start the server. Once the server is running, you can embed the Bokeh plot into your web page or dashboard using an iframe element that points to the URL of the Bokeh server application."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
